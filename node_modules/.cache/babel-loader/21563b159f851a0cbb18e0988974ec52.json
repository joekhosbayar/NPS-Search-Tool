{"ast":null,"code":"var _jsxFileName = \"/Users/joekhosbayar/capitalonechallenge/src/components/Activities.js\";\n// + add the useEffect import\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Component } from 'react';\nimport './Activities.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction handleChange(event) //need to define outside class App, this function is called when onChange event is activated.\n{\n  console.log(event.target.value);\n  search = ' ';\n  this.setState.search = event.target.value;\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //todos stores ALL data from the API fetch\n      todos: [],\n      activities_list: [],\n      //activities list is a cleaned LIST that is created by accessing values inside todos.json dictionary\n      parks: [],\n      parkslink: [] //Stores the parks associated with a search result from handlechange\n\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://developer.nps.gov/api/v1/activities/parks?id=activities&api_key=8NnStekoxJFhJSQlXFrZ4RmXW7ebm6OvQA4upeaF\").then(res => res.json()).then(data => {\n      var activities_temp = [];\n      var parks_temp;\n      var parkslink_temp;\n      this.setState({\n        todos: data\n      });\n      var len = this.state.todos['data'].length;\n\n      for (let i = 0; i < len; i++) {\n        activities_temp[i] = this.state.todos[\"data\"][i][\"name\"] + \", \";\n\n        if (this.state.search = this.state.todos[\"data\"][i][\"name\"]) {\n          for (let j = 0; j < this.state.todos[\"data\"][i][\"parks\"].length; j++) {\n            parks_temp[j] = this.state.todos[\"data\"][i][\"parks\"][j][\"fullName\"];\n            parkslink_temp[j] = this.state.todos[\"data\"][i][\"parks\"][j][\"url\"];\n          }\n        }\n      }\n\n      this.setState({\n        activities_list: activities_temp\n      });\n      this.setState({\n        parks: parks_temp\n      });\n      this.setState({\n        parkslink: parkslink_temp\n      });\n      console.log(this.state.activities_list);\n      console.log(this.state.todos);\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Search from this list of activities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"search result\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"SEARCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.activities_list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joekhosbayar/capitalonechallenge/src/components/Activities.js"],"names":["React","useState","useEffect","Component","handleChange","event","console","log","target","value","search","setState","App","state","todos","activities_list","parks","parkslink","componentDidMount","fetch","then","res","json","data","activities_temp","parks_temp","parkslink_temp","len","length","i","j","catch","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,kBAAP;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EACA;AACI;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAC,EAAAA,MAAM,GAAG,GAAT;AACA,OAAKC,QAAL,CAAcD,MAAd,GAAuBL,KAAK,CAACG,MAAN,CAAaC,KAApC;AACD;;AAEL,MAAMG,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBU,KADwB,GAChB;AACN;AACAC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,eAAe,EAAE,EAHX;AAIN;AACAC,MAAAA,KAAK,EAAE,EALD;AAMNC,MAAAA,SAAS,EAAE,EANL,CAON;;AAPM,KADgB;AAAA;;AAUxBC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,kHAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,UAAJ;AACA,UAAIC,cAAJ;AACA,WAAKf,QAAL,CAAc;AAAEG,QAAAA,KAAK,EAAES;AAAT,OAAd;AACA,UAAII,GAAG,GAAG,KAAKd,KAAL,CAAWC,KAAX,CAAiB,MAAjB,EAAyBc,MAAnC;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,GAAnB,EAAwBE,CAAC,EAAzB,EACA;AACEL,QAAAA,eAAe,CAACK,CAAD,CAAf,GAAqB,KAAKhB,KAAL,CAAWC,KAAX,CAAiB,MAAjB,EAAyBe,CAAzB,EAA4B,MAA5B,IAAsC,IAA3D;;AACA,YAAG,KAAKhB,KAAL,CAAWH,MAAX,GAAoB,KAAKG,KAAL,CAAWC,KAAX,CAAiB,MAAjB,EAAyBe,CAAzB,EAA4B,MAA5B,CAAvB,EACA;AACE,eAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKjB,KAAL,CAAWC,KAAX,CAAiB,MAAjB,EAAyBe,CAAzB,EAA4B,OAA5B,EAAqCD,MAAxD,EAAgEE,CAAC,EAAjE,EACA;AACEL,YAAAA,UAAU,CAACK,CAAD,CAAV,GAAgB,KAAKjB,KAAL,CAAWC,KAAX,CAAiB,MAAjB,EAAyBe,CAAzB,EAA4B,OAA5B,EAAqCC,CAArC,EAAwC,UAAxC,CAAhB;AACAJ,YAAAA,cAAc,CAACI,CAAD,CAAd,GAAoB,KAAKjB,KAAL,CAAWC,KAAX,CAAiB,MAAjB,EAAyBe,CAAzB,EAA4B,OAA5B,EAAqCC,CAArC,EAAwC,KAAxC,CAApB;AACD;AACF;AACF;;AACD,WAAKnB,QAAL,CAAc;AAACI,QAAAA,eAAe,EAAES;AAAlB,OAAd;AACA,WAAKb,QAAL,CAAc;AAACK,QAAAA,KAAK,EAAES;AAAR,OAAd;AACA,WAAKd,QAAL,CAAc;AAACM,QAAAA,SAAS,EAAES;AAAZ,OAAd;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWE,eAAvB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWC,KAAvB;AAED,KA1BD,EA2BCiB,KA3BD,CA2BOzB,OAAO,CAACC,GA3Bf;AA4BD;;AAGHyB,EAAAA,MAAM,GAAE;AACN,wBAEI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAG,eAAd;AAA8B,QAAA,QAAQ,EAAE5B;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAK,KAAKS,KAAL,CAAWE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AASH;;AApD2B;;AAsD5B,eAAeH,GAAf","sourcesContent":["// + add the useEffect import\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Component } from 'react';\nimport './Activities.css'\n\nfunction handleChange(event)\n//need to define outside class App, this function is called when onChange event is activated.\n    {\n      console.log(event.target.value);\n      search = ' '\n      this.setState.search = event.target.value\n    }\n\nclass App extends Component {\n    state = {\n      //todos stores ALL data from the API fetch\n      todos: [],\n      activities_list: [],\n      //activities list is a cleaned LIST that is created by accessing values inside todos.json dictionary\n      parks: [],\n      parkslink: [],\n      //Stores the parks associated with a search result from handlechange\n    }\n    componentDidMount() {\n      fetch(\"https://developer.nps.gov/api/v1/activities/parks?id=activities&api_key=8NnStekoxJFhJSQlXFrZ4RmXW7ebm6OvQA4upeaF\")\n      .then(res => res.json())\n      .then((data) => {\n        var activities_temp = []\n        var parks_temp\n        var parkslink_temp\n        this.setState({ todos: data})\n        var len = this.state.todos['data'].length\n        for(let i = 0; i < len; i++)\n        {\n          activities_temp[i] = this.state.todos[\"data\"][i][\"name\"] + \", \"\n          if(this.state.search = this.state.todos[\"data\"][i][\"name\"])\n          {\n            for(let j = 0; j < this.state.todos[\"data\"][i][\"parks\"].length; j++)\n            {\n              parks_temp[j] = this.state.todos[\"data\"][i][\"parks\"][j][\"fullName\"]\n              parkslink_temp[j] = this.state.todos[\"data\"][i][\"parks\"][j][\"url\"]\n            }\n          }\n        }\n        this.setState({activities_list: activities_temp})\n        this.setState({parks: parks_temp})\n        this.setState({parkslink: parkslink_temp})\n        console.log(this.state.activities_list)\n        console.log(this.state.todos)\n\n      })\n      .catch(console.log)\n    }\n    \n  \n  render(){ \n    return (\n    \n        <div className = 'searchbar'>\n          <label>Search from this list of activities</label>\n          <input name = \"search result\" onChange={handleChange}></input>\n          <button>SEARCH</button>\n          <p>{(this.state.activities_list)}</p>\n        </div>  \n  );\n}\n}\nexport default App"]},"metadata":{},"sourceType":"module"}