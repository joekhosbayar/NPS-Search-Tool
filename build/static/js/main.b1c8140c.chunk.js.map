{"version":3,"sources":["logo.svg","components/Header.js","components/Body.js","components/Activities.js","components/ApiPulls.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Body","App","Component","state","todos","activities_list","parks","parkslink","fetch","then","res","json","data","activities_temp","parks_temp","parkslink_temp","setState","len","length","handleChanges","handleChange","console","log","i","j","catch","name","onChange","this","href","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAAe,I,kBCgBAA,EAbA,WACX,OACI,sBAAKC,UAAY,gBAAjB,UACI,gDACA,qEACA,sBAAKA,UAAW,MAAhB,UACI,gEACA,yDCGDC,G,MAXF,WACT,OACI,qBAAKD,UAAY,QAAjB,SACI,4M,4BCCNE,G,MCAYC,Y,kNDEdC,MAAQ,CAENC,MAAO,GACPC,gBAAiB,GAEjBC,MAAO,GACPC,UAAW,I,uDAIb,WAAqB,IAAD,OAElBC,MAAM,oHACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACL,IAAIC,EAAkB,GAClBC,EAAa,GACbC,EAAiB,GACrB,EAAKC,SAAS,CAAEZ,MAAOQ,IACvB,IAAIK,EAAM,EAAKd,MAAMC,MAAX,KAAyBc,OAC/BC,EAAgBC,EACpBC,QAAQC,IAAI,CAACH,kBACb,IAAI,IAAII,EAAI,EAAGA,EAAIN,EAAKM,IAEtB,GAAG,UAAY,EAAKpB,MAAMC,MAAX,KAAyBmB,GAAzB,KAEb,IAAI,IAAIC,EAAI,EAAGA,EAAI,EAAKrB,MAAMC,MAAX,KAAyBmB,GAAzB,MAAqCL,OAAQM,IAE9DV,EAAWU,GAAK,EAAKrB,MAAMC,MAAX,KAAyBmB,GAAzB,MAAqCC,GAArC,SAAsD,KACtET,EAAeS,GAAK,EAAKrB,MAAMC,MAAX,KAAyBmB,GAAzB,MAAqCC,GAArC,IAK1B,IAAI,IAAID,EAAI,EAAGA,EAAIN,EAAKM,IAEtBV,EAAgBU,GAAK,EAAKpB,MAAMC,MAAX,KAAyBmB,GAAzB,KAAsC,KAG7D,EAAKP,SAAS,CAACX,gBAAiBQ,IAChC,EAAKG,SAAS,CAACV,MAAOQ,IACtB,EAAKE,SAAS,CAACT,UAAWQ,IAE1BM,QAAQC,IAAI,EAAKnB,MAAME,iBACvBgB,QAAQC,IAAI,EAAKnB,MAAMC,OACvBiB,QAAQC,IAAI,EAAKnB,MAAMG,OACvBe,QAAQC,IAAI,EAAKnB,MAAMI,cAGxBkB,MAAMJ,QAAQC,O,oBAInB,WACE,OAEI,sBAAKvB,UAAY,YAAjB,UACE,6EACA,uBAAO2B,KAAO,eAAeC,SAAUP,IACvC,4BAAKQ,KAAKzB,MAAME,kBACd,qBAAKN,UAAY,gBAAjB,SACE,uDAEJ,mBAAG8B,KAASD,KAAKzB,MAAMI,UAAU,GAAjC,SAAwCqB,KAAKzB,MAAMG,e,GAjE3CJ,cAsElB,SAASkB,EAAaU,GAKhB,OAFAT,QAAQC,IAAIQ,EAAMC,OAAOC,OACZF,EAAMC,OAAOC,MAIjB/B,QElEAA,MAZf,WACE,OACE,sBAAKF,UAAU,MAAf,UACE,cAAC,EAAD,IACA,kCACA,cAAC,EAAD,IACA,cAAC,EAAD,QCASkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b1c8140c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport './Header.css'\n\nconst Header = () => {\n    return (\n        <div className = \"NationalParks\">\n            <h1>National Parks</h1>\n            <p>Explore our nation's marvelous parks</p>\n            <div className =\"Joe\">\n                <p>Website Built by: Joe Khosbayar</p>\n                <p>UVA Class of 2025</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport './Body.css'\nconst Body = () => {\n    return (\n        <div className = \"Intro\">\n            <p>The US National Park service maintains and administers our \n                nation's beautiful Parks. Visitors can use our new activity\n                search feature or view images from park webcams!\n            </p>\n        </div>\n    )\n}\n\nexport default Body\n","// + add the useEffect import\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Component } from 'react';\nimport './Activities.css'\n  \nclass App extends Component {\n    \n    state = {\n      //todos stores ALL data from the API fetch\n      todos: [],\n      activities_list: [],\n      //activities list is a cleaned LIST that is created by accessing values inside todos.json dictionary\n      parks: [],\n      parkslink: [],\n      //Stores the parks associated with a search result from handlechange\n    }\n    \n    componentDidMount() {\n      \n      fetch(\"https://developer.nps.gov/api/v1/activities/parks?id=activities&api_key=8NnStekoxJFhJSQlXFrZ4RmXW7ebm6OvQA4upeaF\")\n      .then(res => res.json())\n      .then((data) => {\n        var activities_temp = []\n        var parks_temp = []\n        var parkslink_temp = {}\n        this.setState({ todos: data})\n        var len = this.state.todos['data'].length\n        var handleChanges = handleChange //trying very hard to get the input data into this component. Still cannot pull data\n        console.log({handleChanges})\n        for(let i = 0; i < len; i++)\n        { \n          if('Biking' == this.state.todos[\"data\"][i][\"name\"])//input tag does not push data into componentdidmount(), i set the search equal to 'biking' for example purposes\n          {\n            for(let j = 0; j < this.state.todos[\"data\"][i][\"parks\"].length; j++)\n            {\n              parks_temp[j] = this.state.todos[\"data\"][i][\"parks\"][j][\"fullName\"] + \", \"\n              parkslink_temp[j] = this.state.todos[\"data\"][i][\"parks\"][j][\"url\"]\n            }\n          }\n        }\n\n        for(let i = 0; i < len; i++)\n        {\n          activities_temp[i] = this.state.todos[\"data\"][i][\"name\"] + \", \"\n        }\n        \n        this.setState({activities_list: activities_temp})\n        this.setState({parks: parks_temp})\n        this.setState({parkslink: parkslink_temp})\n\n        console.log(this.state.activities_list)\n        console.log(this.state.todos)\n        console.log(this.state.parks)\n        console.log(this.state.parkslink)\n\n      })\n      .catch(console.log)\n    }\n    \n  \n  render(){ \n    return (\n    \n        <div className = 'searchbar'>\n          <label>Search from this list of activities HERE</label>\n          <input name = \"searchresult\" onChange={handleChange}></input>\n          <p>{(this.state.activities_list)}</p>\n            <div className = 'resultsheader'>\n              <h>RESULTS for 'Biking'</h>\n            </div>\n          <a href = {(this.state.parkslink[0])}>{(this.state.parks)}</a>\n        </div>  \n  );\n}\n}\nfunction handleChange(event)\n//need to define outside class App, this function is called when onChange event is activated.\n    {\n      console.log(event.target.value)\n      let inputz = event.target.value\n      return inputz\n//Could not figure out how to pass the value from the search input into my component mount function :(\n    }\nexport default App","// + add the useEffect import\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Component } from 'react';\nimport './ApiPulls.css';\n\nclass App extends Component {\n    state = {\n      todos: [],\n      name_list: [],\n    }\n    componentDidMount() {\n      fetch('https://developer.nps.gov/api/v1/parks?parkCode=acad&api_key=8NnStekoxJFhJSQlXFrZ4RmXW7ebm6OvQA4upeaF')\n      .then(res => res.json())\n      .then((data) => {\n        var name_listlocal = []\n        this.setState({ todos: data['data'][0]})\n        \n        for(let i = 0; i < this.state.todos[\"activities\"].length; i++)\n        {\n          name_listlocal[i] = this.state.todos[\"activities\"][i][\"name\"];\n          \n        }\n        this.setState({name_list: name_listlocal})\n        console.log(this.state.name_list.length)\n       \n      })\n      .catch(console.log)\n    }\n\n    \n  render(){ \n    return (\n    \n    <div>\n        <div className = \"NatParkData\">\n            <h1>{JSON.stringify(this.state.todos['fullName'])}</h1>\n            <p>\n            {JSON.stringify(this.state.todos[\"description\"])}           \n            </p>\n            <p2>\n              {this.state.name_list}\n            </p2>\n            \n        </div>\n        {console.log(this.state.name_list.length)}\n        \n    </div>   \n      \n  );\n}\n}\nexport default App","import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Body from './components/Body';\nimport ApiPulls from './components/ApiPulls';\nimport Activities from './components/Activities';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <p> </p>\n      <Body/>\n      <Activities/>\n      {/* <Activitysearch/> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}